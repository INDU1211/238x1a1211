import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:flutter/foundation.dart'; // For ChangeNotifier

/// DATA_MODEL: Represents a single user with a name and an email.
class UserData {
  final String name;
  final String email;

  UserData({required this.name, required this.email});
}

/// Provides and manages a list of UserData.
/// This class extends ChangeNotifier to notify listeners of changes.
class UserListProvider extends ChangeNotifier {
  final List<UserData> _users;

  /// Initializes the list of users with sample data.
  UserListProvider()
      : _users = [
          UserData(name: 'Alice Smith', email: 'alice.smith@example.com'),
          UserData(name: 'Bob Johnson', email: 'bob.j@example.com'),
          UserData(name: 'Charlie Brown', email: 'charlie.b@example.com'),
          UserData(name: 'Diana Prince', email: 'diana.p@example.com'),
          UserData(name: 'Eve Adams', email: 'eve.a@example.com'),
          UserData(name: 'Frank White', email: 'frank.w@example.com'),
          UserData(name: 'Grace Hopper', email: 'grace.h@example.com'),
          UserData(name: 'Harry Potter', email: 'harry.p@example.com'),
        ];

  /// Returns an unmodifiable list of users.
  List<UserData> get users => _users;
}

void main() {
  runApp(
    // Wraps the entire app with ChangeNotifierProvider to make UserListProvider
    // accessible to all widgets in the subtree.
    ChangeNotifierProvider<UserListProvider>(
      create: (BuildContext context) => UserListProvider(),
      builder: (BuildContext context, Widget? child) => const UserListApp(),
    ),
  );
}

class UserListApp extends StatelessWidget {
  const UserListApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'User List Application',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.teal,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: const UserListScreen(),
    );
  }
}

class UserListScreen extends StatelessWidget {
  const UserListScreen({super.key});

  @override
  Widget build(BuildContext context) {
    // Access the UserListProvider to get the current list of users.
    // context.watch listens for changes and rebuilds the widget when notifyListeners is called.
    final List<UserData> users = context.watch<UserListProvider>().users;

    return Scaffold(
      appBar: AppBar(title: const Text("Application Users")),
      body: users.isEmpty
          ? const Center(child: Text("No users found"))
          : ListView.builder(
              itemCount: users.length,
              itemBuilder: (BuildContext context, int index) {
                final UserData user = users[index];
                return Card(
                  margin:
                      const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                  elevation: 4,
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10)),
                  child: ListTile(
                    leading: const Icon(Icons.person, color: Colors.teal),
                    title: Text(
                      user.name,
                      style: const TextStyle(
                          fontSize: 18, fontWeight: FontWeight.bold),
                    ),
                    subtitle: Text(
                      user.email,
                      style: const TextStyle(fontSize: 15),
                    ),
                  ),
                );
              },
            ),
    );
  }
}